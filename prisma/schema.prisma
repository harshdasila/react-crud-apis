// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model um_users {
  user_id         Int       @unique @default(autoincrement())
  user_name       String    @db.VarChar(250)
  user_email      String    @unique @db.VarChar(250)
  user_password   String    @db.VarChar(250)
  user_number     String    @db.VarChar(10)
  user_created_at DateTime  @default(now())
  user_updated_at DateTime  @default(now())
  user_deleted_at DateTime?
  um_roles        um_roles? @relation(fields: [user_role_id], references: [role_id])
  user_role_id      Int? @default(5)

  @@index([user_id])
}

model um_roles {
  role_id         Int        @unique @default(autoincrement())
  role_name       String     @db.VarChar(255)
  role_slug       String     @unique @db.VarChar(155)
  role_created_at DateTime   @default(now())
  role_updated_at DateTime   @default(now())
  role_deleted_at DateTime?
  users           um_users[]

  @@index([role_id,role_slug])
}

model um_email_templates {
  et_id Int @unique @default(autoincrement())
  et_slug String @unique @db.VarChar(155)
  et_title String @db.VarChar(255)
  et_subject String @db.VarChar(255)
  et_content String @db.VarChar(5000)
  et_created_at DateTime @default(now())
  et_updated_at DateTime @default(now())
  et_deleted_at DateTime?
}